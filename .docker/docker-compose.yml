services:
    # UI Service - React with Vite
    ui:
        build:
            context: ..
            dockerfile: .docker/ui.Dockerfile
        container_name: ${UI_CONTAINER_NAME:-app_ui}
        restart: unless-stopped
        tty: true
        ports:
            - "${UI_PORT:-5173}:5173"
        volumes:
            - ../ui:/app
            - /app/node_modules
        networks:
            - app-network

    # PHP Service
    php:
        build:
            context: ..
            dockerfile: .docker/phpfpm.Dockerfile
            args:
                PHP_VERSION: ${PHP_VERSION}
        container_name: ${PHP_CONTAINER_NAME}
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: php
            SERVICE_TAGS: dev
            PHP_FPM_PORT: ${PHP_FPM_PORT}
        working_dir: /var/www
        volumes:
            - ../:/var/www
            - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
            - ./php/www.conf:/usr/local/etc/php-fpm.d/www.conf
        networks:
            - app-network

    # Nginx Service
    nginx:
        image: nginx:alpine
        container_name: ${NGINX_CONTAINER_NAME}
        restart: unless-stopped
        tty: true
        ports:
            - "${NGINX_HTTP_PORT}:${NGINX_HTTP_PORT}"
            - "${NGINX_HTTPS_PORT}:${NGINX_HTTPS_PORT}"
        volumes:
            - ../:/var/www
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
        networks:
            - app-network

    ###> doctrine/doctrine-bundle ###
    database:
        container_name: ${DB_CONTAINER_NAME}
        image: postgres:${POSTGRES_VERSION:-16}-alpine
        environment:
            POSTGRES_DB: ${POSTGRES_DB:-app}
            # You should definitely change the password in production
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
            POSTGRES_USER: ${POSTGRES_USER:-app}
        ports:
            - ${POSTGRES_PORT:-5432}
        healthcheck:
            test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}" ]
            timeout: 5s
            retries: 5
        volumes:
            - database_data:/var/lib/postgresql/data:rw
            # You may use a bind-mounted host directory instead so that it is harder to accidentally remove the volume and lose all your data!
            # - ./docker/db/data:/var/lib/postgresql/data:rw
        ###< doctrine/doctrine-bundle ###
        networks:
            - app-network

volumes:
    ###> doctrine/doctrine-bundle ###
    database_data:
    ###< doctrine/doctrine-bundle ###

# Docker Networks
networks:
    app-network:
        driver: bridge
